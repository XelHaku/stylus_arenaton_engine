/**
 * This file was automatically generated by Stylus and represents a Rust program.
 * For more information, please see [The Stylus SDK](https://github.com/OffchainLabs/stylus-sdk-rs).
 */

// SPDX-License-Identifier: MIT-OR-APACHE-2.0
pragma solidity ^0.8.23;

interface ICoreEvents  {
    function initialize() external returns (bool);

    function setOracle(address _oracle_address) external returns (bool);

    function addEvent(string calldata event_id, uint64 start_date) external returns (bool);

    function closeEvent(string calldata event_id, uint8 winner) external returns (bool);

    function getOpenedEventList(uint64 page_size, uint64 page) external view returns (string,uint64,uint8,uint8)[] memory;

    function getClosedEventList(uint64 page_size, uint64 page) external view returns (string,uint64,uint8,uint8)[] memory;

    function getEvent(string calldata _event_id_string) external view returns (uint64, uint8, uint8);

    function owner() external view returns (address);

    function transferOwnership(address new_owner) external;

    function renounceOwnership() external;

    error AlreadyInitialized();

    error AlreadyAdded();

    error AlreadyStarted();

    error NotStartedYet();

    error NotAuthorized();

    error WrongStatus();

    error WrongWinner();

    error InvalidTeam();

    error OwnableUnauthorizedAccount(address);

    error UnauthorizedOracle(address);

    error OwnableInvalidOwner(address);
}